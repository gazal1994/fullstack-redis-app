services:
  mongodb:
    image: gazal94/mongo:7.0
    container_name: fullstack-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: myapp
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - fullstack-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: gazal94/redis:7-alpine
    container_name: fullstack-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: gazal94/fullstack-backend:latest
    container_name: fullstack-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/myapp?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
    ports:
      - "5000:5000"
    networks:
      - fullstack-network
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    image: gazal94/fullstack-frontend:latest
    container_name: fullstack-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - fullstack-network
    depends_on:
      backend:
        condition: service_healthy

volumes:
  mongodb_data:
  redis_data:

networks:
  fullstack-network:
